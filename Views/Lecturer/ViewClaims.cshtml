@model IEnumerable<CMCS.Models.Claim>

@{
    ViewData["Title"] = "My Claims";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="page-header d-flex justify-content-between align-items-center">
            <div>
                <h1>My Claims</h1>
                <p class="text-muted">View and manage all your submitted claims</p>
            </div>
            <div>
                <a asp-action="SubmitClaim" class="btn btn-primary">
                    <i class="fas fa-plus"></i> New Claim
                </a>
            </div>
        </div>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @if (Model != null && Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="claimsTable">
                            <thead>
                                <tr>
                                    <th>Reference</th>
                                    <th>Period</th>
                                    <th>Module</th>
                                    <th>Hours</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Documents</th>
                                    <th>Submitted</th>
                                    <th>Last Updated</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var claim in Model)
                                {
                                    <tr>
                                        <td>
                                            <strong>@claim.ClaimReference</strong>
                                        </td>
                                        <td>@GetMonthName(claim.MonthWorked)/@claim.YearWorked</td>
                                        <td>@claim.ModuleTaught</td>
                                        <td>@claim.HoursWorked.ToString("F1")</td>
                                        <td>
                                            <strong>R @claim.TotalAmount.ToString("F2")</strong>
                                        </td>
                                        <td>
                                            <span class="badge @GetStatusBadgeClass(claim.Status)">
                                                @GetStatusDisplayName(claim.Status)
                                            </span>
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">
                                                @(claim.Documents?.Count ?? 0)
                                            </span>
                                        </td>
                                        <td>@claim.SubmissionDate.ToString("dd MMM yyyy")</td>
                                        <td>@claim.LastModifiedDate.ToString("dd MMM yyyy")</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a asp-action="UploadDocuments" asp-route-claimId="@claim.ClaimId"
                                                   class="btn btn-outline-primary" title="Upload Documents">
                                                    <i class="fas fa-upload"></i>
                                                </a>
                                                <button type="button" class="btn btn-outline-info"
                                                        data-bs-toggle="modal" data-bs-target="#claimDetailsModal"
                                                        data-claim-id="@claim.ClaimId" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-file-invoice fa-4x text-muted mb-3"></i>
                        <h4>No claims found</h4>
                        <p class="text-muted mb-4">You haven't submitted any claims yet.</p>
                        <a asp-action="SubmitClaim" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Submit Your First Claim
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Claim Details Modal -->
<div class="modal fade" id="claimDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Claim Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="claimDetailsContent">
                <!-- Content will be loaded via AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            $('#claimsTable').DataTable({
                pageLength: 10,
                order: [[7, 'desc']],
                language: {
                    search: "Search:",
                    lengthMenu: "Show _MENU_ entries",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    infoEmpty: "Showing 0 to 0 of 0 entries",
                    infoFiltered: "(filtered from _MAX_ total entries)",
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                }
            });

            // Claim details modal
            $('#claimDetailsModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var claimId = button.data('claim-id');
                var modal = $(this);

                // Load claim details via AJAX
                $.get('/Lecturer/GetClaimDetails/' + claimId, function (data) {
                    modal.find('#claimDetailsContent').html(data);
                }).fail(function () {
                    modal.find('#claimDetailsContent').html('<div class="alert alert-danger">Error loading claim details.</div>');
                });
            });
        });
    </script>
}

@functions {
    public string GetStatusBadgeClass(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.PENDING => "bg-warning",
            ClaimStatus.UNDER_REVIEW => "bg-info",
            ClaimStatus.APPROVED_PC => "bg-primary",
            ClaimStatus.APPROVED_AM => "bg-info",
            ClaimStatus.APPROVED_FINAL => "bg-success",
            ClaimStatus.PAID => "bg-success",
            ClaimStatus.REJECTED => "bg-danger",
            ClaimStatus.CANCELLED => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    public string GetStatusDisplayName(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.PENDING => "Pending",
            ClaimStatus.UNDER_REVIEW => "Under Review",
            ClaimStatus.APPROVED_PC => "Approved by Coordinator",
            ClaimStatus.APPROVED_AM => "Approved by Manager",
            ClaimStatus.APPROVED_FINAL => "Approved - Ready for Payment",
            ClaimStatus.PAID => "Paid",
            ClaimStatus.REJECTED => "Rejected",
            ClaimStatus.CANCELLED => "Cancelled",
            _ => status.ToString()
        };
    }

    public string GetMonthName(int month)
    {
        return month switch
        {
            1 => "Jan",
            2 => "Feb",
            3 => "Mar",
            4 => "Apr",
            5 => "May",
            6 => "Jun",
            7 => "Jul",
            8 => "Aug",
            9 => "Sep",
            10 => "Oct",
            11 => "Nov",
            12 => "Dec",
            _ => "Unknown"
        };
    }
}