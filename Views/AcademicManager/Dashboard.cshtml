@model IEnumerable<CMCS.Models.Claim>

@{
    ViewData["Title"] = "Academic Manager Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <!-- Statistics Cards -->
    <div class="col-md-3 mb-4">
        <div class="card bg-warning text-dark">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@ViewBag.TotalPending</h4>
                        <p class="card-text">Pending Claims</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-clock fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb-4">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@ViewBag.TotalFinalApproved</h4>
                        <p class="card-text">Final Approved</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-check-circle fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb-4">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">R @ViewBag.TotalAmountPending.ToString("F2")</h4>
                        <p class="card-text">Pending Amount</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-money-bill-wave fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb-4">
        <div class="card bg-danger text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@ViewBag.TotalRejected</h4>
                        <p class="card-text">Rejected Claims</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-times-circle fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-warning text-dark">
                <h3 class="card-title mb-0">
                    <i class="fas fa-tasks"></i> Ready Claims for Approval
                </h3>
                <p class="card-subtitle mb-0 mt-1">Claims approved by Programme Coordinator awaiting final approval</p>
            </div>
            <div class="card-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="claimsTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Lecturer</th>
                                    <th>Claim Reference</th>
                                    <th>Month/Year</th>
                                    <th>Hours</th>
                                    <th>Amount</th>
                                    <th>PC Approval Date</th>
                                    <th>Documents</th>
                                    <th width="200">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var claim in Model)
                                {
                                    var monthYear = new DateTime(claim.YearWorked, claim.MonthWorked, 1).ToString("MMM yyyy");
                                    var pcApproval = claim.Approvals?.FirstOrDefault(a => a.Level == ApprovalLevel.PROGRAMME_COORDINATOR && a.Status == ApprovalStatus.APPROVED);

                                    <tr id="claim-row-@claim.ClaimId">
                                        <td>
                                            <strong>@claim.Lecturer?.FirstName @claim.Lecturer?.LastName</strong>
                                            <br>
                                            <small class="text-muted">@claim.Lecturer?.Email</small>
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@claim.ClaimReference</span>
                                        </td>
                                        <td>@monthYear</td>
                                        <td>
                                            <span class="badge bg-info">@claim.HoursWorked.ToString("F1") hours</span>
                                        </td>
                                        <td>
                                            <strong class="text-success">R @claim.TotalAmount.ToString("F2")</strong>
                                        </td>
                                        <td>
                                            @if (pcApproval != null)
                                            {
                                                <small>@pcApproval.ApprovalDate?.ToString("dd MMM yyyy")</small>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">N/A</span>
                                            }
                                        </td>
                                        <td>
                                            @if (claim.Documents != null && claim.Documents.Any())
                                            {
                                                <span class="badge bg-success">@claim.Documents.Count</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">0</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group-vertical btn-group-sm w-100" role="group">
                                                <!-- Quick Approve Form -->
                                                <form asp-action="FinalApprove" method="post" class="d-inline quick-approve-form">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="claimId" value="@claim.ClaimId" />
                                                    <input type="hidden" name="comments" value="Approved via dashboard quick action." />
                                                    <button type="submit" class="btn btn-success btn-sm w-100 mb-1 quick-approve-btn"
                                                            data-claim-id="@claim.ClaimId" data-claim-ref="@claim.ClaimReference">
                                                        <i class="fas fa-check"></i> Quick Approve
                                                    </button>
                                                </form>

                                                <!-- Quick Reject Button (opens modal) -->
                                                <button type="button" class="btn btn-danger btn-sm w-100 mb-1 quick-reject-btn"
                                                        data-bs-toggle="modal" data-bs-target="#rejectModal"
                                                        data-claim-id="@claim.ClaimId" data-claim-ref="@claim.ClaimReference">
                                                    <i class="fas fa-times"></i> Quick Reject
                                                </button>

                                                <!-- Review Details Button -->
                                                <a href="@Url.Action("ReviewClaim", new { id = claim.ClaimId })"
                                                   class="btn btn-outline-primary btn-sm w-100">
                                                    <i class="fas fa-search"></i> Review Details
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                        <h4 class="text-muted">No Claims Pending Approval</h4>
                        <p class="text-muted">There are currently no claims waiting for Academic Manager approval.</p>
                        <a href="@Url.Action("ApprovedClaims")" class="btn btn-outline-primary">
                            <i class="fas fa-list"></i> View Approved Claims
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-success text-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-chart-bar"></i> Quick Actions
                </h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="@Url.Action("ApprovedClaims")" class="btn btn-outline-success">
                        <i class="fas fa-check-double"></i> View Final Approved Claims
                    </a>
                    <a href="@Url.Action("RejectedClaims")" class="btn btn-outline-danger">
                        <i class="fas fa-times-circle"></i> View Rejected Claims
                    </a>
                    <a href="@Url.Action("Reports")" class="btn btn-outline-info">
                        <i class="fas fa-chart-line"></i> View Reports
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-info-circle"></i> Approval Workflow
                </h5>
            </div>
            <div class="card-body">
                <ol class="list-group list-group-numbered">
                    <li class="list-group-item d-flex justify-content-between align-items-start">
                        <div class="ms-2 me-auto">
                            <div class="fw-bold">Programme Coordinator</div>
                            Initial review and approval
                        </div>
                        <span class="badge bg-primary rounded-pill">✓</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-start">
                        <div class="ms-2 me-auto">
                            <div class="fw-bold">Academic Manager</div>
                            Final approval and quality check
                        </div>
                        <span class="badge bg-warning rounded-pill">→</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-start">
                        <div class="ms-2 me-auto">
                            <div class="fw-bold">HR Department</div>
                            Payment processing
                        </div>
                        <span class="badge bg-secondary rounded-pill">⏱️</span>
                    </li>
                </ol>
            </div>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="rejectModalLabel">
                    <i class="fas fa-times-circle"></i> Reject Claim
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="rejectForm" asp-action="RejectClaim" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="rejectClaimId" name="claimId" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="rejectReason" class="form-label fw-bold">Rejection Reason *</label>
                        <textarea class="form-control" id="rejectReason" name="reason" rows="4"
                                  placeholder="Please provide a reason for rejecting this claim..." required></textarea>
                        <div class="form-text">This reason will be visible to the lecturer and Programme Coordinator.</div>
                    </div>
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>Warning:</strong> This action cannot be undone. The claim will be marked as rejected and the lecturer will be notified.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmReject">
                        <i class="fas fa-times"></i> Confirm Rejection
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable if table exists
            if ($('#claimsTable').length) {
                $('#claimsTable').DataTable({
                    "pageLength": 10,
                    "ordering": true,
                    "searching": true,
                    "responsive": true,
                    "language": {
                        "search": "Search claims:",
                        "lengthMenu": "Show _MENU_ claims per page"
                    }
                });
            }

            // Quick Approve confirmation and loading state
            $('.quick-approve-form').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var claimId = form.find('input[name="claimId"]').val();
                var claimRef = form.find('.quick-approve-btn').data('claim-ref');

                if (confirm(`Are you sure you want to approve claim ${claimRef}? This will send it to HR for payment processing.`)) {
                    // Show loading state
                    var button = form.find('.quick-approve-btn');
                    var originalText = button.html();
                    button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Approving...');

                    // Submit the form
                    $.ajax({
                        url: form.attr('action'),
                        type: 'POST',
                        data: form.serialize(),
                        success: function (response) {
                            // Remove the row from the table
                            $('#claim-row-' + claimId).fadeOut(300, function() {
                                $(this).remove();
                                // Reload the page to update statistics
                                setTimeout(function() {
                                    location.reload();
                                }, 1000);
                            });

                            // Show success message
                            showToast('Success', `Claim ${claimRef} approved successfully!`, 'success');
                        },
                        error: function (xhr, status, error) {
                            button.prop('disabled', false).html(originalText);
                            showToast('Error', 'Failed to approve claim. Please try again.', 'error');
                        }
                    });
                }
            });

            // Quick Reject modal setup
            var rejectModal = document.getElementById('rejectModal');
            rejectModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var claimId = button.getAttribute('data-claim-id');
                var claimRef = button.getAttribute('data-claim-ref');

                // Update modal content
                var modalTitle = rejectModal.querySelector('.modal-title');
                modalTitle.textContent = `Reject Claim: ${claimRef}`;

                // Set claim ID in form
                document.getElementById('rejectClaimId').value = claimId;

                // Clear previous reason
                document.getElementById('rejectReason').value = '';
            });

            // Reject form submission
            $('#rejectForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var claimId = form.find('#rejectClaimId').val();
                var reason = form.find('#rejectReason').val().trim();

                if (!reason) {
                    alert('Please provide a rejection reason.');
                    return;
                }

                // Show loading state
                var button = form.find('#confirmReject');
                var originalText = button.html();
                button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Rejecting...');

                // Submit the form
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        // Close modal
                        var modal = bootstrap.Modal.getInstance(rejectModal);
                        modal.hide();

                        // Remove the row from the table
                        $('#claim-row-' + claimId).fadeOut(300, function() {
                            $(this).remove();
                            // Reload the page to update statistics
                            setTimeout(function() {
                                location.reload();
                            }, 1000);
                        });

                        // Show success message
                        showToast('Success', 'Claim rejected successfully!', 'success');
                    },
                    error: function (xhr, status, error) {
                        button.prop('disabled', false).html(originalText);
                        showToast('Error', 'Failed to reject claim. Please try again.', 'error');
                    }
                });
            });

            // Toast notification function
            function showToast(title, message, type) {
                // Remove any existing toasts
                $('.toast-container').remove();

                var toastHtml = `
                    <div class="toast-container position-fixed top-0 end-0 p-3">
                        <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0" role="alert">
                            <div class="d-flex">
                                <div class="toast-body">
                                    <strong>${title}</strong><br>${message}
                                </div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                            </div>
                        </div>
                    </div>
                `;

                $('body').append(toastHtml);
                $('.toast').toast('show');
            }

            // Add keyboard shortcuts
            $(document).keydown(function(e) {
                // Ctrl + A for quick approve (when focused on a row)
                if (e.ctrlKey && e.key === 'a') {
                    e.preventDefault();
                    var focusedRow = $('tr:focus');
                    if (focusedRow.length) {
                        focusedRow.find('.quick-approve-btn').click();
                    }
                }
                // Ctrl + R for quick reject (when focused on a row)
                if (e.ctrlKey && e.key === 'r') {
                    e.preventDefault();
                    var focusedRow = $('tr:focus');
                    if (focusedRow.length) {
                        focusedRow.find('.quick-reject-btn').click();
                    }
                }
            });
        });
    </script>

    <style>
        .btn-group-vertical .btn {
            margin-bottom: 2px;
        }

        .quick-approve-btn:hover {
            background-color: #198754;
            border-color: #198754;
        }

        .quick-reject-btn:hover {
            background-color: #dc3545;
            border-color: #dc3545;
        }

        /* Make table rows more interactive */
        #claimsTable tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.03);
            cursor: pointer;
        }

        /* Loading animation */
        .btn-loading {
            position: relative;
            color: transparent !important;
        }

            .btn-loading:after {
                content: '';
                position: absolute;
                width: 16px;
                height: 16px;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                margin: auto;
                border: 2px solid transparent;
                border-top-color: #ffffff;
                border-radius: 50%;
                animation: button-loading-spinner 1s ease infinite;
            }

        @@keyframes button-loading-spinner {
            from {
                transform: rotate(0turn);
            }

            to {
                transform: rotate(1turn);
            }
        }

        /* Toast notifications */
        .toast-container {
            z-index: 9999;
        }
    </style>
}