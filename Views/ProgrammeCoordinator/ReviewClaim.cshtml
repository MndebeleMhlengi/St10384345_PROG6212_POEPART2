@model CMCS.Models.Claim

@{
    ViewData["Title"] = "Review Claim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h3 class="card-title mb-0">
                    <i class="fas fa-search"></i> Review Claim
                </h3>
            </div>
            <div class="card-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <!-- Claim Details -->
                <div class="mb-4">
                    <h5 class="border-bottom pb-2">Claim Details</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Reference:</strong> @Model.ClaimReference<br>
                            <strong>Status:</strong>
                            <span class="badge bg-@(Model.Status == ClaimStatus.PENDING ? "warning" :
                                                                                  Model.Status == ClaimStatus.APPROVED_PC ? "success" :
                                                                                  Model.Status == ClaimStatus.REJECTED ? "danger" : "info")">
                                @Model.Status
                            </span>
                        </div>
                        <div class="col-md-6">
                            <strong>Submitted:</strong> @Model.SubmissionDate.ToString("dd MMM yyyy HH:mm")<br>
                            <strong>Last Modified:</strong> @Model.LastModifiedDate.ToString("dd MMM yyyy HH:mm")
                        </div>
                    </div>
                </div>

                <!-- Lecturer Information -->
                <div class="mb-4">
                    <h5 class="border-bottom pb-2">Lecturer Information</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Name:</strong> @(Model.Lecturer?.FirstName ?? "N/A") @(Model.Lecturer?.LastName ?? "")<br>
                            <strong>Email:</strong> @(Model.Lecturer?.Email ?? "N/A")
                        </div>
                        <div class="col-md-6">
                            <strong>Faculty Rate:</strong> R @(Model.Lecturer?.HourlyRate.ToString("F2") ?? "N/A")<br>
                        </div>
                    </div>
                </div>

                <!-- Claim Information -->
                <div class="mb-4">
                    <h5 class="border-bottom pb-2">Claim Information</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Period:</strong>
                            @{
                                var monthName = new DateTime(Model.YearWorked, Model.MonthWorked, 1).ToString("MMMM yyyy");
                            }
                            @monthName<br>
                            <strong>Hours Worked:</strong> @Model.HoursWorked.ToString("F1") hours<br>
                        </div>
                        <div class="col-md-6">
                            <strong>Module:</strong> @Model.ModuleTaught<br>
                            <strong>Hourly Rate:</strong> R @Model.HourlyRate.ToString("F2")
                        </div>
                    </div>
                </div>

                <!-- Total Amount -->
                <div class="mb-4">
                    <div class="alert alert-info">
                        <h5 class="mb-0">Total Amount: R @Model.TotalAmount.ToString("F2")</h5>
                    </div>
                </div>

                <!-- Additional Notes -->
                @if (!string.IsNullOrEmpty(Model.AdditionalNotes))
                {
                    <div class="mb-4">
                        <h5 class="border-bottom pb-2">Additional Notes</h5>
                        <p class="mb-0">@Model.AdditionalNotes</p>
                    </div>
                }

                <!-- Supporting Documents -->
                @if (Model.Documents != null && Model.Documents.Any())
                {
                    <div class="mb-4">
                        <h5 class="border-bottom pb-2">Supporting Documents (@Model.Documents.Count())</h5>
                        <div class="table-responsive">
                            <table class="table table-sm table-striped">
                                <thead>
                                    <tr>
                                        <th>File Name</th>
                                        <th>Type</th>
                                        <th>Size</th>
                                        <th>Uploaded</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var doc in Model.Documents)
                                    {
                                        <tr>
                                            <td>@doc.FileName</td>
                                            <td>@doc.FileType.ToUpper()</td>
                                            <td>@((doc.FileSize / 1024.0).ToString("F2")) KB</td>
                                            <td>@doc.UploadDate.ToString("dd MMM yyyy")</td>
                                            <td>
                                                <a href="@Url.Action("DownloadDocument", new { documentId = doc.DocumentId })"
                                                   class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-download"></i> Download
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div class="mb-4">
                        <h5 class="border-bottom pb-2">Supporting Documents</h5>
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle"></i> No supporting documents uploaded.
                        </div>
                    </div>
                }

                <!-- Approval History -->
                @if (Model.Approvals != null && Model.Approvals.Any())
                {
                    <div class="mb-4">
                        <h5 class="border-bottom pb-2">Approval History</h5>
                        @foreach (var approval in Model.Approvals.OrderBy(a => a.ReviewDate))
                        {
                            <div class="card mb-2">
                                <div class="card-body py-2">
                                    <div class="d-flex justify-content-between">
                                        <strong>@approval.Approver?.FirstName @approval.Approver?.LastName</strong>
                                        <span class="badge bg-@(approval.Status == ApprovalStatus.APPROVED ? "success" : "danger")">
                                            @approval.Status
                                        </span>
                                    </div>
                                    <small class="text-muted">@approval.ReviewDate.ToString("dd MMM yyyy HH:mm") - @approval.Level</small>
                                    @if (!string.IsNullOrEmpty(approval.Comments))
                                    {
                                        <div class="mt-1">@approval.Comments</div>
                                    }
                                    @if (!string.IsNullOrEmpty(approval.RejectionReason))
                                    {
                                        <div class="mt-1 text-danger"><strong>Reason:</strong> @approval.RejectionReason</div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <!-- Review Actions -->
        @if (Model.Status == ClaimStatus.PENDING)
        {
            <div class="card mb-4">
                <div class="card-header bg-warning text-dark">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-tasks"></i> Review Actions
                    </h5>
                </div>
                <div class="card-body">
                    <!-- Approve Form -->
                    <form asp-action="ApproveClaim" method="post" class="mb-3" id="approveForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="claimId" value="@Model.ClaimId" />

                        <div class="mb-3">
                            <label for="comments" class="form-label fw-bold">Approval Comments</label>
                            <textarea name="comments" class="form-control" rows="3"
                                  placeholder="Add your review comments (optional)..."></textarea>
                        </div>

                        <button type="submit" class="btn btn-success w-100" id="approveButton">
                            <i class="fas fa-check-circle"></i> Approve Claim
                        </button>
                    </form>

                    <!-- Reject Form -->
                    <form asp-action="RejectClaim" method="post" id="rejectForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="claimId" value="@Model.ClaimId" />

                        <div class="mb-3">
                            <label for="reason" class="form-label fw-bold">Rejection Reason *</label>
                            <textarea name="reason" class="form-control" rows="3"
                                  placeholder="Provide reason for rejection..." required></textarea>
                        </div>

                        <button type="submit" class="btn btn-danger w-100" id="rejectButton">
                            <i class="fas fa-times-circle"></i> Reject Claim
                        </button>
                    </form>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <h5><i class="fas fa-info-circle"></i> Claim Processed</h5>
                <p class="mb-0">This claim has already been @Model.Status.ToString().ToLower().</p>
            </div>
        }

        <!-- Verification Checklist -->
        <div class="card">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-clipboard-check"></i> Verification Checklist
                </h5>
            </div>
            <div class="card-body">
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="check1">
                    <label class="form-check-label" for="check1">
                        Hours within reasonable range
                    </label>
                </div>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="check2">
                    <label class="form-check-label" for="check2">
                        Supporting documents provided
                    </label>
                </div>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="check3">
                    <label class="form-check-label" for="check3">
                        Module information correct
                    </label>
                </div>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="check4">
                    <label class="form-check-label" for="check4">
                        Rate matches lecturer profile
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Dashboard" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to Dashboard
    </a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Add confirmation for reject action
            $('form[action*="RejectClaim"]').on('submit', function (e) {
                const reason = $(this).find('textarea[name="reason"]').val().trim();
                if (!reason) {
                    e.preventDefault();
                    alert('Please provide a reason for rejection.');
                    return false;
                }

                if (!confirm('Are you sure you want to reject this claim? This action cannot be undone.')) {
                    e.preventDefault();
                    return false;
                }
            });

            // Add confirmation for approve action
            $('form[action*="ApproveClaim"]').on('submit', function (e) {
                if (!confirm('Are you sure you want to approve this claim?')) {
                    e.preventDefault();
                    return false;
                }
            });

            // Add loading state to buttons
            $('form').on('submit', function () {
                const button = $(this).find('button[type="submit"]');
                button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Processing...');
            });

            // Check if there are any error messages and scroll to top
            if ($('.alert-danger').length > 0) {
                $('html, body').animate({ scrollTop: 0 }, 500);
            }
        });
    </script>
}